node {
    try {
        notifyBuild('STARTED')

        stage('Prepare code') {
            echo 'do checkout stuff'
        }

        stage('Testing') {
            echo 'Testing'
            echo 'Testing - publish coverage results'
        }

        stage('Staging') {
            echo 'Deploy Stage'
        }

        stage('Deploy') {
            echo 'Deploy - Backend'
            echo 'Deploy - Frontend'
        }

  } catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"




node {
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    echo "jenkins build is : ${env.BUILD_NUMBER}"
    echo "jenkins build name is : ${env.JOB_NAME}"
    echo "jenkins home dir is : ${JENKINS_HOME}"
    def mavenHome = tool name: "Maven3.9.0"
    try{
    slackNotifications('STARTED')    
    stage('git checkout'){
        git credentialsId: 'github-jenkins', url: 'https://github.com/cloudtechnoli/maven-web-application.git'
    }
    stage('build'){
        sh "${mavenHome}/bin/mvn clean package"
    }
    stage('checkcodequality'){
        sh "${mavenHome}/bin/mvn clean sonar:sonar"
    }
    stage('sourcecodedeploytoArtificatory'){
        sh "${mavenHome}/bin/mvn clean deploy"
    }
    stage('deploy to tomcat'){
        sshagent(['tomcatjekins']){
         sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.14.100:/opt/tomcat/webapps/"
     }
    }
  }//end try
  catch(e){
  currentBuild.result="FAILURE"
  throw e
  }//catch closing
  finally{
  slackNotifications(currentBuild.result)
  }
 } //Node closing
 
 def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  //buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#scriptpipeline")
}